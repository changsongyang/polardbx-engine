RUN CREATE USER 'x_root'@'galaxy' IDENTIFIED WITH 'mysql_native_password'

0 rows affected
RUN GRANT ALL ON *.*TO 'x_root'@'galaxy' WITH GRANT OPTION

0 rows affected
RUN FLUSH PRIVILEGES

0 rows affected
RUN set global galaxyx_enable_galaxy_kill_log = OFF

0 rows affected
RUN drop schema if exists xtest

0 rows affected
RUN create schema xtest

1 rows affected
RUN use xtest

0 rows affected
RUN create table mytable (pk int primary key auto_increment, data varchar(100))

0 rows affected
RUN create procedure result_and_error ()
begin
  select 1;
  select * from invalid_table;
end

0 rows affected
send Mysqlx.Session.NewSession {
}

Mysqlx.Ok {
}

send Mysqlx.Sql.GalaxyStmtExecute {
  stmt: "insert into mytable values (DEFAULT, \'one\')"
  db_name: "xtest"
}


1 rows affected
last insert id: 1
send Mysqlx.Sql.GalaxyStmtExecute {
  stmt: "insert into mytable values (DEFAULT, \'two\')"
}


1 rows affected
last insert id: 2
send Mysqlx.Sql.GalaxyStmtExecute {
  stmt: "insert into mytable values (DEFAULT, \'three\')"
}


1 rows affected
last insert id: 3
send Mysqlx.Session.NewSession {
}

Mysqlx.Ok {
}

send Mysqlx.Sql.GalaxyStmtExecute {
  stmt: "begin"
  db_name: "xtest"
  token: 10000
}


0 rows affected
send Mysqlx.Sql.GalaxyStmtExecute {
  stmt: "select data from mytable where pk=1 for update"
  token: 10000
}

data
one
0 rows affected
send Mysqlx.Sql.GalaxyStmtExecute {
  stmt: "set global galaxyx_max_queued_messages=8"
  token: 10000
}


0 rows affected
send Mysqlx.Sql.GalaxyStmtExecute {
  stmt: "select data from mytable where pk=1 for update"
  token: 10000
}

send Mysqlx.Sql.GalaxyStmtExecute {
  stmt: "select data from mytable where pk=1 for update"
  token: 10000
}

send Mysqlx.Sql.GalaxyStmtExecute {
  stmt: "select data from mytable where pk=1 for update"
  token: 10000
}

send Mysqlx.Sql.GalaxyStmtExecute {
  stmt: "select data from mytable where pk=1 for update"
  token: 10000
}

send Mysqlx.Sql.GalaxyStmtExecute {
  stmt: "select data from mytable where pk=1 for update"
  token: 10000
}

send Mysqlx.Sql.GalaxyStmtExecute {
  stmt: "select data from mytable where pk=1 for update"
  token: 10000
}

send Mysqlx.Sql.GalaxyStmtExecute {
  stmt: "select data from mytable where pk=1 for update"
  token: 10000
}

send Mysqlx.Sql.GalaxyStmtExecute {
  stmt: "select data from mytable where pk=1 for update"
  token: 10000
}

send Mysqlx.Sql.GalaxyStmtExecute {
  stmt: "select data from mytable where pk=1 for update"
  token: 10000
}

send Mysqlx.Sql.GalaxyStmtExecute {
  stmt: "select data from mytable where pk=1 for update"
  token: 10000
}

Got expected error:
Mysqlx.Error {
  severity: FATAL
  code: 11245
  msg: "Session max_queued_messages limit exceed"
  sql_state: "HY000"
}

Got expected error:
Mysqlx.Error {
  severity: FATAL
  code: 1317
  msg: "Query execution was interrupted"
  sql_state: "HY000"
}

send Mysqlx.Sql.GalaxyStmtExecute {
  stmt: "rollback"
  token: 10000
}


0 rows affected
send Mysqlx.Session.Close {
}

Mysqlx.Ok {
}

RUN set global galaxyx_max_queued_messages=128

0 rows affected
RUN set global galaxyx_enable_galaxy_kill_log = ON

0 rows affected
RUN drop schema if exists xtest

1 rows affected
RUN DROP USER 'x_root'@'galaxy'

0 rows affected
RUN FLUSH PRIVILEGES

0 rows affected
Mysqlx.Ok {
  msg: "bye!"
}
ok
